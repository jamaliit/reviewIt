@{
    ViewBag.Title = "Map";
}

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCkFqTEoezitueIfUN1_d-PNSYYaDkk8Ho&libraries=places">
</script>

@*<label for="locationTextField">Location</label>
    <input id="locationTextField" type="text" size="50">
    <div id="myMap"></div>
    <input id="address" type="text" style="width:600px;" /><br />
    <input type="text" id="latitude" placeholder="Latitude" />
    <input type="text" id="longitude" placeholder="Longitude" />*@

<div><input id="lat">
<input id="lng">
    <input id="address" type="text" style="width:600px;" /><br />
    </div>
<input id="pac" class="controls" type="text" placeholder="Search Box">
<div id="map-canvas"></div>



<script>

    function initialize() {
        var markers = [];
        var map = new google.maps.Map(document.getElementById('map-canvas'), {
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });
        var defaultBounds = new google.maps.LatLngBounds(
            new google.maps.LatLng(-33.8902, 151.1759),
            new google.maps.LatLng(-33.8474, 151.2631));

        map.fitBounds(defaultBounds);

        var input =  document.getElementById('pac');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var searchBox = new google.maps.places.SearchBox((input));

          google.maps.event.addListener(searchBox, 'places_changed', function() {
              var places = searchBox.getPlaces();

              if (places.length == 0) {
                  return;
              }
              for (var i = 0, marker; marker = markers[i]; i++) {
                  marker.setMap(null);
              }
              markers = [];
              var bounds = new google.maps.LatLngBounds();
              for (var i = 0, place; place = places[i]; i++) {
                  var image = {
                      url: place.icon,
                      size: new google.maps.Size(71, 71),
                      origin: new google.maps.Point(0, 0),
                      anchor: new google.maps.Point(17, 34),
                      scaledSize: new google.maps.Size(25, 25)
                  };
                  var marker = new google.maps.Marker({
                      draggable: true,
                      map: map,
                      icon: image,
                      title: place.name,
                      position: place.geometry.location
                  });
                  // drag response
                  google.maps.event.addListener(marker, 'dragend', function (e) {
                      displayPosition(this.getPosition());
                  });
                  // click response
                  google.maps.event.addListener(marker, 'click', function (e) {
                      displayPosition(this.getPosition());
                  });
                  markers.push(marker);
                  bounds.extend(place.geometry.location);
              }
              map.fitBounds(bounds);
          });
    

        google.maps.event.addListener(map, 'bounds_changed', function() {
            var bounds = map.getBounds();
            searchBox.setBounds(bounds);
        });
        // displays a position on two <input> elements
        function displayPosition(pos) {
            document.getElementById('lat').value = pos.lat();
            document.getElementById('lng').value = pos.lng();
            // $('#address').val(results[0].formatted_address);
            document.getElementById('address').value = pos.formatted_address();


        }
    }
    
    google.maps.event.addDomListener(window, 'load', initialize);
</script>








@*<script type="text/javascript">
        var map;
        var marker;
        var myLatlng = new google.maps.LatLng(20.268455824834792, 85.84099235520011);
        var geocoder = new google.maps.Geocoder();
        var infowindow = new google.maps.InfoWindow();

        function initialize() {
            var map = {
                zoom: 18,
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            map = new google.maps.Map(document.getElementById("myMap"), map);

            marker = new google.maps.Marker({
                map: map,
                position: myLatlng,
                draggable: true
            });

             // Create the search box and link it to the UI element.
            var input = document.getElementById('locationTextField');
             var searchBox = new google.maps.places.SearchBox(input);
             map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

             // Bias the SearchBox results towards current map's viewport.
             map.addListener('bounds_changed', function() {
                 searchBox.setBounds(map.getBounds());
             });

             var marker = [];
             // Listen for the event fired when the user selects a prediction and retrieve
             // more details for that place.
             searchBox.addListener('places_changed', function() {
                 var places = searchBox.getPlaces();

                 if (places.length == 0) {
                     return;
                 }

                 // Clear out the old marker.
                 marker.forEach(function(marker) {
                     marker.setMap(null);
                 });
                 marker = [];

                 // For each place, get the icon, name and location.
                 var bounds = new google.maps.LatLngBounds();
                 places.forEach(function(place) {
                     if (!place.geometry) {
                         console.log("Returned place contains no geometry");
                         return;
                     }
                     var icon = {
                         url: place.icon,
                         size: new google.maps.Size(71, 71),
                         origin: new google.maps.Point(0, 0),
                         anchor: new google.maps.Point(17, 34),
                         scaledSize: new google.maps.Size(25, 25),


                     };

                     // Create a marker for each place.
                     marker.push(new google.maps.Marker({
                         map: map,
                         //marker:marker,
                        // icon: icon,
                         title: place.name,
                         position: place.geometry.location,
                         draggable: true
                     }));

                     if (place.geometry.viewport) {
                         // Only geocodes have viewport.
                         bounds.union(place.geometry.viewport);
                     } else {
                         bounds.extend(place.geometry.location);
                     }
                 });
                 map.fitBounds(bounds);

        
             });


             //   var input = document.getElementById('locationTextField');
               // var autocomplete = new google.maps.places.Autocomplete(input);


           // google.maps.event.addDomListener(window, 'load', init);

                  //marker.setMap(null);


         //drag marker get position


            geocoder.geocode({ 'latLng': myLatlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        $('#latitude,#longitude').show();
                        $('#address').val(results[0].formatted_address);
                        $('#latitude').val(marker.getPosition().lat());
                        $('#longitude').val(marker.getPosition().lng());
                        infowindow.setContent(results[0].formatted_address);
                        infowindow.open(map, marker);
                    }
                }
            });

            google.maps.event.addListener(marker, 'dragend', function () {

                geocoder.geocode({ 'latLng': marker.getPosition() }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        if (results[0]) {
                            $('#address').val(results[0].formatted_address);
                            $('#latitude').val(marker.getPosition().lat());
                            $('#longitude').val(marker.getPosition().lng());
                            infowindow.setContent(results[0].formatted_address);
                            infowindow.open(map, marker);
                        }
                    }
                });
            });

        }
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>*@



<style>
    #map-canvas {
        height: 300px;
        width: 500px;
    }
</style>
